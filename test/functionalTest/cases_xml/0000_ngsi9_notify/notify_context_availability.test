# Copyright 2013 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Notify Context Availability processing

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--
echo "1: ++++++++++++++++++++"
url="/v1/registry/notifyContextAvailability"
payload='<?xml version="1.0"?>
<notifyContextAvailabilityRequest>
  <subscriptionId>51307b66f481db11bf860001</subscriptionId>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>ConferenceRoom</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
          <contextRegistrationAttribute>
            <name>pressure</name>
            <type>clima</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://sensor1:1028</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</notifyContextAvailabilityRequest>'
orionCurl --url "$url" --payload "$payload"

echo "2: ++++++++++++++++++++"
url="/v1/registry/discoverContextAvailability"
payload='<?xml version="1.0"?>
  <discoverContextAvailabilityRequest>
    <entityIdList>
      <entityId type="Room" isPattern="false">
        <id>ConferenceRoom</id>
      </entityId>
    </entityIdList>
    <attributeList/>
  </discoverContextAvailabilityRequest>'
orionCurl --url "$url" --payload "$payload"

--REGEXPECT--
1: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 165
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<notifyContextAvailabilityResponse>
  <responseCode>
    <code>200</code>
    <reasonPhrase>OK</reasonPhrase>
  </responseCode>
</notifyContextAvailabilityResponse>
2: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 970
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<discoverContextAvailabilityResponse>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>ConferenceRoom</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
          <contextRegistrationAttribute>
            <name>pressure</name>
            <type>clima</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://sensor1:1028</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</discoverContextAvailabilityResponse>
--TEARDOWN--
brokerStop CB
dbDrop CB
