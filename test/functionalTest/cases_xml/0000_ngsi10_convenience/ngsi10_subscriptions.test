# Copyright 2013 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
NGSI10 Convenience Subscriptions

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--
# 1. Create a subscription
echo "1: ++++++++++++++++++++"
url="/v1/contextSubscriptions"
payload='<?xml version="1.0"?>
<subscribeContextRequest>
  <entityIdList>
    <entityId type="Room" isPattern="false">
      <id>OfficeRoom</id>
    </entityId>
  </entityIdList>
  <attributeList>
    <attribute>temperature</attribute>
    <attribute>lightstatus</attribute>
  </attributeList>
  <reference>http://localhost:'${LISTENER_PORT}'/notify</reference>
  <duration>PT1H</duration>
  <notifyConditions>
    <notifyCondition>
      <type>ONCHANGE</type>
      <condValueList>
        <condValue>temperature</condValue>
        <condValue>lightstatus</condValue>
      </condValueList>          
    </notifyCondition>
  </notifyConditions>
</subscribeContextRequest>'
orionCurl --url "$url" --payload "$payload"

SUB_ID=$(echo "$_response" | grep subscriptionId | awk -F '>' '{print $2}' | awk -F '<' '{print $1}' | grep -v '^$' )

# 2. Update the subscription
echo "2: ++++++++++++++++++++"
url="/v1/contextSubscriptions/$SUB_ID" 
payload='<?xml version="1.0"?>
<updateContextSubscriptionRequest>
  <duration>P1Y</duration>
  <subscriptionId>'$SUB_ID'</subscriptionId>
  <throttling>PT6S</throttling>
</updateContextSubscriptionRequest>'
orionCurl --url "$url" --payload "$payload" -X "PUT"

# 3. Delete the subscription
echo "3: ++++++++++++++++++++"
orionCurl --url "/v1/contextSubscriptions/$SUB_ID" -X "DELETE"

# 4. Bad verb
echo "4: ++++++++++++++++++++"
orionCurl --url "/v1/contextSubscriptions/$SUB_ID" -X "DELETE2"

echo "5: ++++++++++++++++++++"
--REGEXPECT--
1: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 192
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<subscribeContextResponse>
  <subscribeResponse>
    <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
    <duration>PT1H</duration>
  </subscribeResponse>
</subscribeContextResponse>
2: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 243
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<updateContextSubscriptionResponse>
  <subscribeResponse>
    <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
    <duration>P1Y</duration>
    <throttling>PT6S</throttling>
  </subscribeResponse>
</updateContextSubscriptionResponse>
3: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 207
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<unsubscribeContextResponse>
  <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
  <statusCode>
    <code>200</code>
    <reasonPhrase>OK</reasonPhrase>
  </statusCode>
</unsubscribeContextResponse>
4: ++++++++++++++++++++
HTTP/1.1 405 Method Not Allowed
Content-Length: 0
Allow: PUT, DELETE
Date: REGEX(.*)

5: ++++++++++++++++++++
--TEARDOWN--
brokerStop CB
dbDrop CB
