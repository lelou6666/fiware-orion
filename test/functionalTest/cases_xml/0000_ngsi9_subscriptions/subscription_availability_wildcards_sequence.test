# Copyright 2013 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Subscription availability sequence with wildcards

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart

--SHELL--
url="/v1/registry/registerContext"
payload='<?xml version="1.0"?>
  <registerContextRequest>
    <contextRegistrationList>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>ConferenceRoom</id>
          </entityId>
          <entityId type="Room" isPattern="false">
            <id>OfficeRoom</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://sensor1:1028</providingApplication>
      </contextRegistration>
    </contextRegistrationList>
    <duration>PT1H</duration>
    <registrationId></registrationId>
  </registerContextRequest>'
orionCurl --url "$url" --payload "${payload}"

echo "1: ++++++++++++++++++++"
url="/v1/registry/registerContext"
payload='<?xml version="1.0"?>
  <registerContextRequest>
    <contextRegistrationList>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>ConferenceRoom2</id>
          </entityId>
          <entityId type="Room" isPattern="false">
            <id>OfficeRoom2</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://sensor2:1028</providingApplication>
      </contextRegistration>
    </contextRegistrationList>
    <duration>PT1H</duration>
    <registrationId></registrationId>
  </registerContextRequest>'
orionCurl --url "$url" --payload "${payload}"

echo "2: ++++++++++++++++++++"
url="/v1/registry/subscribeContextAvailability"
payload='<?xml version="1.0"?>
<subscribeContextAvailabilityRequest>
        <entityIdList>
                <entityId type="Room" isPattern="true">
                        <id>ConferenceRoom.*</id>
                </entityId>
        </entityIdList>
        <attributeList>
                <attribute>temperature</attribute>
                <attribute>occupancy</attribute>
                <attribute>lightstatus</attribute>
        </attributeList>
        <reference>http://127.0.0.1:'${LISTENER_PORT}'/notify</reference>
        <duration>PT5H</duration>
</subscribeContextAvailabilityRequest>'
orionCurl --url "$url" --payload "${payload}"
SUB_ID=$(echo "$_response" | grep subscriptionId | awk -F '>' '{print $2}' | awk -F '<' '{print $1}' | grep -v '^$' )

echo "3: ++++++++++++++++++++"
url="/v1/registry/registerContext"
payload='<?xml version="1.0"?>
  <registerContextRequest>
    <contextRegistrationList>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>ConferenceRoom3</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://sensor3:1028</providingApplication>
      </contextRegistration>
    </contextRegistrationList>
    <duration>PT1H</duration>
    <registrationId></registrationId>
  </registerContextRequest>'
orionCurl --url "$url" --payload "${payload}"

echo "4: ++++++++++++++++++++"
url="/v1/registry/updateContextAvailabilitySubscription"
payload='<?xml version="1.0"?>
<updateContextAvailabilitySubscriptionRequest>
        <entityIdList>
                <entityId type="Room" isPattern="true">
                        <id>OfficeRoom.*</id>
                </entityId>
        </entityIdList>
        <attributeList>
                <attribute>temperature</attribute>
                <attribute>occupancy</attribute>
                <attribute>lightstatus</attribute>
        </attributeList>
        <duration>PT5H</duration>
        <subscriptionId>'$SUB_ID'</subscriptionId>
</updateContextAvailabilitySubscriptionRequest>'
orionCurl --url "$url" --payload "${payload}"

echo "5: ++++++++++++++++++++"
url="/v1/registry/registerContext"
payload='<?xml version="1.0"?>
  <registerContextRequest>
    <contextRegistrationList>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>OfficeRoom3</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://sensor4:1028</providingApplication>
      </contextRegistration>
    </contextRegistrationList>
    <duration>PT1H</duration>
    <registrationId></registrationId>
  </registerContextRequest>'
orionCurl --url "$url" --payload "${payload}"

echo "6: ++++++++++++++++++++"
url="/v1/registry/unsubscribeContextAvailability"
payload='<?xml version="1.0"?>
<unsubscribeContextAvailabilityRequest>
        <subscriptionId>'$SUB_ID'</subscriptionId>
</unsubscribeContextAvailabilityRequest>'
orionCurl --url "$url" --payload "${payload}"

echo "7: ++++++++++++++++++++"
#Get accumulated data
accumulatorDump


--REGEXPECT--
HTTP/1.1 200 OK
Content-Length: 141
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<registerContextResponse>
  <duration>PT1H</duration>
  <registrationId>REGEX([0-9a-f]{24})</registrationId>
</registerContextResponse>
1: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 141
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<registerContextResponse>
  <duration>PT1H</duration>
  <registrationId>REGEX([0-9a-f]{24})</registrationId>
</registerContextResponse>
2: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 167
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<subscribeContextAvailabilityResponse>
  <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
  <duration>PT5H</duration>
</subscribeContextAvailabilityResponse>
3: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 141
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<registerContextResponse>
  <duration>PT1H</duration>
  <registrationId>REGEX([0-9a-f]{24})</registrationId>
</registerContextResponse>
4: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 185
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<updateContextAvailabilitySubscriptionResponse>
  <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
  <duration>PT5H</duration>
</updateContextAvailabilitySubscriptionResponse>
5: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 141
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<registerContextResponse>
  <duration>PT1H</duration>
  <registrationId>REGEX([0-9a-f]{24})</registrationId>
</registerContextResponse>
6: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 231
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<unsubscribeContextAvailabilityResponse>
  <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
  <statusCode>
    <code>200</code>
    <reasonPhrase>OK</reasonPhrase>
  </statusCode>
</unsubscribeContextAvailabilityResponse>
7: ++++++++++++++++++++
POST http://127.0.0.1:REGEX(\d+)/notify
Content-Length: 1471
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/xml

<notifyContextAvailabilityRequest>
  <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>ConferenceRoom</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://sensor1:1028</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>ConferenceRoom2</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://sensor2:1028</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</notifyContextAvailabilityRequest>
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Content-Length: 838
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/xml

<notifyContextAvailabilityRequest>
  <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>ConferenceRoom3</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://sensor3:1028</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</notifyContextAvailabilityRequest>
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Content-Length: 1463
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/xml

<notifyContextAvailabilityRequest>
  <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>OfficeRoom</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://sensor1:1028</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>OfficeRoom2</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://sensor2:1028</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</notifyContextAvailabilityRequest>
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Content-Length: 834
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/xml

<notifyContextAvailabilityRequest>
  <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>OfficeRoom3</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://sensor4:1028</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</notifyContextAvailabilityRequest>
=======================================
--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
