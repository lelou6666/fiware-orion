# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Subscription sequence ONCHANGE with compound values JSON

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart

--SHELL--
echo "1: +++++++++ Prepare subscription +++++++++++"
url="/v1/subscribeContext"
payload='{
    "entities": [
        {
            "type": "T",
            "isPattern": "false",
            "id": "E"
        }
    ],
    "attributes": [ ],
    "reference": "http://127.0.0.1:'${LISTENER_PORT}'/notify",
    "duration": "PT1H",
    "notifyConditions": [
        {
            "type": "ONCHANGE",
            "condValues": [
                "att"
            ]
        }
    ]
}'
orionCurl --url "$url" --payload "$payload" --json

echo "2: ++++++++++ Create the entity attribute with vector value ++++++++++"
url="/v1/updateContext"
payload='<?xml version="1.0"?>
<updateContextRequest>
  <contextElementList>
    <contextElement>
      <entityId type="T" isPattern="false">
        <id>E</id>
      </entityId>
      <contextAttributeList>
        <contextAttribute>
          <name>att</name>
          <type>compound</type>
          <contextValue type="vector">
             <item>22</item>
             <item>
               <x type="vector">
                 <item>x1</item>
                 <item>x2</item>
               </x>
               <y>3</y>
             </item>
             <item type="vector">
               <item>z1</item>
               <item>z2</item>
             </item>
          </contextValue>
        </contextAttribute>
      </contextAttributeList>
    </contextElement>
  </contextElementList>
  <updateAction>APPEND</updateAction>
</updateContextRequest>'
orionCurl --url "$url" --payload "$payload"

echo "3: ++++++++++ Update the entity attribute with object value ++++++++++"
url="/v1/updateContext"
payload='<?xml version="1.0"?>
<updateContextRequest>
  <contextElementList>
    <contextElement>
      <entityId type="T" isPattern="false">
        <id>E</id>
      </entityId>
      <contextAttributeList>
        <contextAttribute>
          <name>att</name>
          <type>compound</type>
          <contextValue>
             <x>
               <x1>a</x1>
               <x2>b</x2>
             </x>
             <y type="vector">
                <item>y1</item>
                <item>y2</item>
             </y>
          </contextValue>
        </contextAttribute>
      </contextAttributeList>
    </contextElement>
  </contextElementList>
  <updateAction>UPDATE</updateAction>
</updateContextRequest>'
orionCurl --url "$url" --payload "$payload"

#Get accumulated data
accumulatorDump


--REGEXPECT--
1: +++++++++ Prepare subscription +++++++++++
HTTP/1.1 200 OK
Content-Length: 109
Content-Type: application/json
Date: REGEX(.*)

{
    "subscribeResponse": {
        "duration": "PT1H",
        "subscriptionId": "REGEX([0-9a-f]{24})"
    }
}
2: ++++++++++ Create the entity attribute with vector value ++++++++++
HTTP/1.1 200 OK
Content-Length: 622
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<updateContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="T" isPattern="false">
          <id>E</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>att</name>
            <type>compound</type>
            <contextValue/>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</updateContextResponse>
3: ++++++++++ Update the entity attribute with object value ++++++++++
HTTP/1.1 200 OK
Content-Length: 622
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<updateContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="T" isPattern="false">
          <id>E</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>att</name>
            <type>compound</type>
            <contextValue/>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</updateContextResponse>
POST http://127.0.0.1:REGEX(\d+)/notify
Content-Length: 720
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8

{
  "subscriptionId" : "REGEX([0-9a-f]{24})",
  "originator" : "localhost",
  "contextResponses" : [
    {
      "contextElement" : {
        "type" : "T",
        "isPattern" : "false",
        "id" : "E",
        "attributes" : [
          {
            "name" : "att",
            "type" : "compound",
            "value" : [
              "22",
              {
                "x" : [
                  "x1",
                  "x2"
                ],
                "y" : "3"
              },
              [
                "z1",
                "z2"
              ]
            ]
          }
        ]
      },
      "statusCode" : {
        "code" : "200",
        "reasonPhrase" : "OK"
      }
    }
  ]
}
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Content-Length: 651
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8

{
  "subscriptionId" : "REGEX([0-9a-f]{24})",
  "originator" : "localhost",
  "contextResponses" : [
    {
      "contextElement" : {
        "type" : "T",
        "isPattern" : "false",
        "id" : "E",
        "attributes" : [
          {
            "name" : "att",
            "type" : "compound",
            "value" : {
              "x" : {
                "x1" : "a",
                "x2" : "b"
              },
              "y" : [
                "y1",
                "y2"
              ]
            }
          }
        ]
      },
      "statusCode" : {
        "code" : "200",
        "reasonPhrase" : "OK"
      }
    }
  ]
}
=======================================
--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
