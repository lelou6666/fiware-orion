# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Create and query compound object XML-JSON

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--
echo "1: +++++++++ create object compound +++++++++++"
url="/v1/contextEntities/EObject"
payload='<?xml version="1.0" encoding="UTF-8"?>
<appendContextElementRequest>
  <contextAttributeList>
    <contextAttribute>
      <name>att</name>
      <type>compound</type>
      <contextValue>
         <x>
           <x1>a</x1>
           <x2>b</x2>
         </x>
         <y type="vector">
            <item>y1</item>
            <item>y2</item>
         </y>
      </contextValue>
    </contextAttribute>
  </contextAttributeList>
</appendContextElementRequest>'
orionCurl --url "$url" --payload "$payload"

echo "2: ++++++++++ query for object compound in JSON ++++++++++"
url="/v1/queryContext"
payload='{
    "entities": [
        {
            "type": "",
            "isPattern": "false",
            "id": "EObject"
        }
    ]
}'
orionCurl --url "$url" --payload "$payload" --json

--REGEXPECT--
1: +++++++++ create object compound +++++++++++
HTTP/1.1 200 OK
Content-Length: 566
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<appendContextElementResponse>
  <entityId type="" isPattern="false">
    <id>EObject</id>
  </entityId>
  <contextResponseList>
    <contextAttributeResponse>
      <contextAttributeList>
        <contextAttribute>
          <name>att</name>
          <type>compound</type>
          <contextValue/>
        </contextAttribute>
      </contextAttributeList>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextAttributeResponse>
  </contextResponseList>
</appendContextElementResponse>
2: ++++++++++ query for object compound in JSON ++++++++++
HTTP/1.1 200 OK
Content-Length: 577
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "att", 
                        "type": "compound", 
                        "value": {
                            "x": {
                                "x1": "a", 
                                "x2": "b"
                            }, 
                            "y": [
                                "y1", 
                                "y2"
                            ]
                        }
                    }
                ], 
                "id": "EObject", 
                "isPattern": "false", 
                "type": ""
            }, 
            "statusCode": {
                "code": "200", 
                "reasonPhrase": "OK"
            }
        }
    ]
}
--TEARDOWN--
brokerStop CB
dbDrop CB
