# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Create and query compound values (standard op and JSON creation)

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--
echo "1: +++++++++ create vector compound +++++++++++"
url="/v1/updateContext"
payload='{
    "contextElements": [
        {
            "type": "T",
            "isPattern": "false",
            "id": "EVector",
            "attributes": [
            {
                "name": "att",
                "type": "compound",
                "value": [
                   "22",
                   {
                      "x": [ "x1", "x2" ],
                      "y": "3"
                   },
                   [ "z1", "z2" ]
                ]
            }
            ]
        }
    ],
    "updateAction": "APPEND"
}'
orionCurl --url "$url" --payload "$payload" --json

echo "2: +++++++++ create object compound +++++++++++"
url="/v1/updateContext"
payload='{
    "contextElements": [
        {
            "type": "T",
            "isPattern": "false",
            "id": "EObject",
            "attributes": [
            {
                "name": "att",
                "type": "compound",
                "value": {
                   "x": {
                      "x1": "a",
                      "x2": "b"
                   },
                   "y": [ "y1", "y2" ]
                }
            }
            ]
        }
    ],
    "updateAction": "APPEND"
}'
orionCurl --url "$url" --payload "$payload" --json

echo "3: ++++++++++ query for vector compound in XML ++++++++++"
url="/v1/queryContext"
payload='<?xml version="1.0" encoding="UTF-8"?>
<queryContextRequest>
  <entityIdList>
        <entityId type="T" isPattern="false">
          <id>EVector</id>
        </entityId>
  </entityIdList>
  <attributeList/>
</queryContextRequest>'
orionCurl --url "$url" --payload "$payload"

echo "4: ++++++++++ query for object compound in XML ++++++++++"
url="/v1/queryContext"
payload='<?xml version="1.0" encoding="UTF-8"?>
<queryContextRequest>
  <entityIdList>
        <entityId type="T" isPattern="false">
          <id>EObject</id>
        </entityId>
  </entityIdList>
  <attributeList/>
</queryContextRequest>'
orionCurl --url "$url" --payload "$payload"

echo "5: ++++++++++ query for vector compound in JSON ++++++++++"
url="/v1/queryContext"
payload='{
    "entities": [
        {
            "type": "T",
            "isPattern": "false",
            "id": "EVector"
        }
    ]
}'
orionCurl --url "$url" --payload "$payload" --json

echo "6: ++++++++++ query for object compound in JSON ++++++++++"
url="/v1/queryContext"
payload='{
    "entities": [
        {
            "type": "T",
            "isPattern": "false",
            "id": "EObject"
        }
    ]
}'
orionCurl --url "$url" --payload "$payload" --json


echo "7: ++++++++++ query for vector compound in XML convop ++++++++++"
orionCurl --url "/v1/contextEntities/EVector"

echo "8: ++++++++++ query for object compound in XML convop ++++++++++"
orionCurl --url "/v1/contextEntities/EObject"

echo "9: ++++++++++ query for vector compound in JSON convop ++++++++++"
orionCurl --url "/v1/contextEntities/EVector" --json

echo "10: ++++++++++ query for object compound in JSON convop ++++++++++"
orionCurl --url "/v1/contextEntities/EObject" --json 

--REGEXPECT--
1: +++++++++ create vector compound +++++++++++
HTTP/1.1 200 OK
Content-Length: 390
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "att", 
                        "type": "compound", 
                        "value": ""
                    }
                ], 
                "id": "EVector", 
                "isPattern": "false", 
                "type": "T"
            }, 
            "statusCode": {
                "code": "200", 
                "reasonPhrase": "OK"
            }
        }
    ]
}
2: +++++++++ create object compound +++++++++++
HTTP/1.1 200 OK
Content-Length: 390
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "att", 
                        "type": "compound", 
                        "value": ""
                    }
                ], 
                "id": "EObject", 
                "isPattern": "false", 
                "type": "T"
            }, 
            "statusCode": {
                "code": "200", 
                "reasonPhrase": "OK"
            }
        }
    ]
}
3: ++++++++++ query for vector compound in XML ++++++++++
HTTP/1.1 200 OK
Content-Length: 995
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<queryContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="T" isPattern="false">
          <id>EVector</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>att</name>
            <type>compound</type>
            <contextValue type="vector">
              <item>22</item>
              <item>
                <x type="vector">
                  <item>x1</item>
                  <item>x2</item>
                </x>
                <y>3</y>
              </item>
              <item type="vector">
                <item>z1</item>
                <item>z2</item>
              </item>
            </contextValue>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</queryContextResponse>
4: ++++++++++ query for object compound in XML ++++++++++
HTTP/1.1 200 OK
Content-Length: 845
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<queryContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="T" isPattern="false">
          <id>EObject</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>att</name>
            <type>compound</type>
            <contextValue>
              <x>
                <x1>a</x1>
                <x2>b</x2>
              </x>
              <y type="vector">
                <item>y1</item>
                <item>y2</item>
              </y>
            </contextValue>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</queryContextResponse>
5: ++++++++++ query for vector compound in JSON ++++++++++
HTTP/1.1 200 OK
Content-Length: 647
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "att", 
                        "type": "compound", 
                        "value": [
                            "22", 
                            {
                                "x": [
                                    "x1", 
                                    "x2"
                                ], 
                                "y": "3"
                            }, 
                            [
                                "z1", 
                                "z2"
                            ]
                        ]
                    }
                ], 
                "id": "EVector", 
                "isPattern": "false", 
                "type": "T"
            }, 
            "statusCode": {
                "code": "200", 
                "reasonPhrase": "OK"
            }
        }
    ]
}
6: ++++++++++ query for object compound in JSON ++++++++++
HTTP/1.1 200 OK
Content-Length: 578
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "att", 
                        "type": "compound", 
                        "value": {
                            "x": {
                                "x1": "a", 
                                "x2": "b"
                            }, 
                            "y": [
                                "y1", 
                                "y2"
                            ]
                        }
                    }
                ], 
                "id": "EObject", 
                "isPattern": "false", 
                "type": "T"
            }, 
            "statusCode": {
                "code": "200", 
                "reasonPhrase": "OK"
            }
        }
    ]
}
7: ++++++++++ query for vector compound in XML convop ++++++++++
HTTP/1.1 200 OK
Content-Length: 775
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<contextElementResponse>
  <contextElement>
    <entityId type="T" isPattern="false">
      <id>EVector</id>
    </entityId>
    <contextAttributeList>
      <contextAttribute>
        <name>att</name>
        <type>compound</type>
        <contextValue type="vector">
          <item>22</item>
          <item>
            <x type="vector">
              <item>x1</item>
              <item>x2</item>
            </x>
            <y>3</y>
          </item>
          <item type="vector">
            <item>z1</item>
            <item>z2</item>
          </item>
        </contextValue>
      </contextAttribute>
    </contextAttributeList>
  </contextElement>
  <statusCode>
    <code>200</code>
    <reasonPhrase>OK</reasonPhrase>
  </statusCode>
</contextElementResponse>
8: ++++++++++ query for object compound in XML convop ++++++++++
HTTP/1.1 200 OK
Content-Length: 641
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<contextElementResponse>
  <contextElement>
    <entityId type="T" isPattern="false">
      <id>EObject</id>
    </entityId>
    <contextAttributeList>
      <contextAttribute>
        <name>att</name>
        <type>compound</type>
        <contextValue>
          <x>
            <x1>a</x1>
            <x2>b</x2>
          </x>
          <y type="vector">
            <item>y1</item>
            <item>y2</item>
          </y>
        </contextValue>
      </contextAttribute>
    </contextAttributeList>
  </contextElement>
  <statusCode>
    <code>200</code>
    <reasonPhrase>OK</reasonPhrase>
  </statusCode>
</contextElementResponse>
9: ++++++++++ query for vector compound in JSON convop ++++++++++
HTTP/1.1 200 OK
Content-Length: 490
Content-Type: application/json
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "name": "att", 
                "type": "compound", 
                "value": [
                    "22", 
                    {
                        "x": [
                            "x1", 
                            "x2"
                        ], 
                        "y": "3"
                    }, 
                    [
                        "z1", 
                        "z2"
                    ]
                ]
            }
        ], 
        "id": "EVector", 
        "isPattern": "false", 
        "type": "T"
    }, 
    "statusCode": {
        "code": "200", 
        "reasonPhrase": "OK"
    }
}
10: ++++++++++ query for object compound in JSON convop ++++++++++
HTTP/1.1 200 OK
Content-Length: 437
Content-Type: application/json
Date: REGEX(.*)

{
    "contextElement": {
        "attributes": [
            {
                "name": "att", 
                "type": "compound", 
                "value": {
                    "x": {
                        "x1": "a", 
                        "x2": "b"
                    }, 
                    "y": [
                        "y1", 
                        "y2"
                    ]
                }
            }
        ], 
        "id": "EObject", 
        "isPattern": "false", 
        "type": "T"
    }, 
    "statusCode": {
        "code": "200", 
        "reasonPhrase": "OK"
    }
}
--TEARDOWN--
brokerStop CB
dbDrop CB
