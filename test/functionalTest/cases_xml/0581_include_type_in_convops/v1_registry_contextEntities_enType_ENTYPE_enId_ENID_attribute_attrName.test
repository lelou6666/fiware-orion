# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Convenience Entity By Id Attribute By Name

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255 IPv4 -statCounters

--SHELL--

#
# 01. GET /v1/registry/contextEntities/type/ET1/id/entity01/attributes/attr01 and see it fail
# 02. POST /v1/registry/contextEntities/type/ET1/id/entity01/attributes/attr01 OK
# 03. GET /v1/registry/contextEntities/type/ET1/id/entity01/attributes/attr01 OK
# 04. POST /v1/registry/contextEntities/type/ET1/id/entity01/attributes/attr02 with XML
# 05. GET /v1/registry/contextEntities/type/ET1/id/entity01/attributes/attr02 with XML
# 06. GET /statistics
#

echo "01. GET /v1/registry/contextEntities/type/ET1/id/entity01/attributes/attr01 and see it fail"
echo "==========================================================================================="
orionCurl --url /v1/registry/contextEntities/type/ET1/id/entity01/attributes/attr01 --json
echo
echo


echo "02. POST /v1/registry/contextEntities/type/ET1/id/entity01/attributes/attr01 OK"
echo "==============================================================================="
url="/v1/registry/contextEntities/entity01/attributes/attr01"
payload='{
  "metadatas": [
    {
      "name": "ID",
      "type": "string",
      "value": "1110"
    },
    {
      "name": "cm2",
      "type": "string",
      "value": "XXX"
    }
  ],
  "duration": "PT1H",
  "providingApplication": "http://kz.tid.es/abc"
}'
orionCurl --url /v1/registry/contextEntities/type/ET1/id/entity01/attributes/attr01 --payload "$payload" --json
echo
echo


echo "03. GET /v1/registry/contextEntities/type/ET1/id/entity01/attributes/attr01 OK"
echo "=============================================================================="
orionCurl --url /v1/registry/contextEntities/type/ET1/id/entity01/attributes/attr01 --json
echo
echo


echo "04. POST /v1/registry/contextEntities/type/ET1/id/entity01/attributes/attr02 with XML"
echo "====================================================================================="
payload='<?xml version="1.0"?>
<registerProviderRequest>
  <metadata>
    <contextMetadata>
      <name>ID</name>
      <type>string</type>
      <value>1110</value>
    </contextMetadata>
    <contextMetadata>
      <name>cm2</name>
      <type>string</type>
      <value>XXX</value>
    </contextMetadata>
  </metadata>
  <duration>PT1H</duration>
  <providingApplication>http://kz.tid.es/abc</providingApplication>
</registerProviderRequest>'
orionCurl --url /v1/registry/contextEntities/type/ET1/id/entity01/attributes/attr02 --payload "$payload"
echo
echo


echo "05. GET /v1/registry/contextEntities/type/ET1/id/entity01/attributes/attr02 with XML"
echo "===================================================================================="
orionCurl --url /v1/registry/contextEntities/type/ET1/id/entity01/attributes/attr02
echo
echo

echo "06. GET /statistics"
echo "==================="
orionCurl --url /statistics --json
echo
echo


#
# About
#   "subCacheRefreshs": "REGEX((0|1))"
# When the broker is started with -noCache, there are no refreshes performed
#

--REGEXPECT--
01. GET /v1/registry/contextEntities/type/ET1/id/entity01/attributes/attr01 and see it fail
===========================================================================================
HTTP/1.1 200 OK
Content-Length: 94
Content-Type: application/json
Date: REGEX(.*)

{
    "errorCode": {
        "code": "404", 
        "reasonPhrase": "No context element found"
    }
}


02. POST /v1/registry/contextEntities/type/ET1/id/entity01/attributes/attr01 OK
===============================================================================
HTTP/1.1 200 OK
Content-Length: 75
Content-Type: application/json
Date: REGEX(.*)

{
    "duration": "PT1H", 
    "registrationId": "REGEX([0-9a-f]{24})"
}


03. GET /v1/registry/contextEntities/type/ET1/id/entity01/attributes/attr01 OK
==============================================================================
HTTP/1.1 200 OK
Content-Length: 453
Content-Type: application/json
Date: REGEX(.*)

{
    "contextRegistrationResponses": [
        {
            "contextRegistration": {
                "attributes": [
                    {
                        "isDomain": "false", 
                        "name": "attr01", 
                        "type": ""
                    }
                ], 
                "entities": [
                    {
                        "id": "entity01", 
                        "isPattern": "false", 
                        "type": "ET1"
                    }
                ], 
                "providingApplication": "http://kz.tid.es/abc"
            }
        }
    ]
}


04. POST /v1/registry/contextEntities/type/ET1/id/entity01/attributes/attr02 with XML
=====================================================================================
HTTP/1.1 200 OK
Content-Length: 141
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<registerContextResponse>
  <duration>PT1H</duration>
  <registrationId>REGEX([0-9a-f]{24})</registrationId>
</registerContextResponse>


05. GET /v1/registry/contextEntities/type/ET1/id/entity01/attributes/attr02 with XML
====================================================================================
HTTP/1.1 200 OK
Content-Length: 766
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<discoverContextAvailabilityResponse>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="ET1" isPattern="false">
            <id>entity01</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>attr02</name>
            <type/>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://kz.tid.es/abc</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</discoverContextAvailabilityResponse>


06. GET /statistics
===================
HTTP/1.1 200 OK
Content-Length: REGEX(\d+)
Content-Type: application/json
Date: REGEX(.*)

{
    "counters": {
        "entityByIdAttributeByNameIdAndType": 5,
        "jsonRequests": 1,
        "statisticsRequests": 1,
        "versionRequests": REGEX((0|1)),
        "xmlRequests": 1
    },
    "measuring_interval_in_secs": REGEX(\d+),
    "uptime_in_secs": REGEX(\d+)
}


--TEARDOWN--
brokerStop CB
dbDrop CB
