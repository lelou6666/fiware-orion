# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Filter with dateCreated in subscriptions

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart

--SHELL--

#
# 01. At t_0: Create subscription with q: dateCreated==t_2..t_4
# 02. At t_1: Create entity E1 (not notif)
# 03. At t_2: Create entity E2 (notif)
# 04. At t_3: Create entity E3 (notif)
# 05. At t_4: Create entity E4 (notif)
# 06. At t_5: Create entity E5 (not notif)
# 07. Get accumulator dump (3 notifications): E2, E3, E4
#

T_0=$(TZ=GMT date +"%Y-%m-%dT%H:%M:%S.00Z")
T_2=$(TZ=GMT date +"%Y-%m-%dT%H:%M:%S.00Z" --date="2seconds")
T_4=$(TZ=GMT date +"%Y-%m-%dT%H:%M:%S.00Z" --date="4seconds")

echo "01. At t_0: Create subscription with q: dateCreated==t_2..t_4"
echo "============================================================="
payload='
{
    "subject": {
        "entities": [
            {
                "idPattern": "E.*",
                "type": "T"
            }
        ],
        "condition": {
            "attributes": [ ],
            "expression": {
               "q": "dateCreated=='$T_2'..'$T_4'"
            }
         }
    },
    "notification": {
        "callback": "http://localhost:'$LISTENER_PORT'/notify",
        "attributes": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}
'
orionCurl --url /v2/subscriptions --payload "$payload" --json
echo
echo
sleep 1s


echo "02. At t_1: Create entity E1 (not notif)"
echo "========================================"
payload='{
  "id": "E1",
  "type": "T",
  "A": "foo1"
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload" --json
echo
echo
sleep 1.1s  # total sleep: 2.1


echo "03. At t_2: Create entity E2 (notif)"
echo "===================================="
payload='{
  "id": "E2",
  "type": "T",
  "A": "foo2"
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload" --json
echo
echo
sleep 0.8s  # total sleep: 2.9


echo "04. At t_3: Create entity E3 (notif)"
echo "===================================="
payload='{
  "id": "E3",
  "type": "T",
  "A": "foo3"
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload" --json
echo
echo
sleep 0.8s  # total sleep: 3.7


echo "05. At t_4: Create entity E4 (notif)"
echo "===================================="
payload='{
  "id": "E4",
  "type": "T",
  "A": "foo4"
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload" --json
echo
echo
sleep 1s  # total sleep: 4.7


echo "06. At t_5: Create entity E5 (not notif)"
echo "========================================"
payload='{
  "id": "E5",
  "type": "T",
  "A": "foo5"
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload" --json
echo
echo


echo "07. Get accumulator dump (3 notifications): E2, E3, E4"
echo "======================================================"
accumulatorDump
echo
echo


--REGEXPECT--
01. At t_0: Create subscription with q: dateCreated==t_2..t_4
=============================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Date: REGEX(.*)



02. At t_1: Create entity E1 (not notif)
========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T
Date: REGEX(.*)



03. At t_2: Create entity E2 (notif)
====================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E2?type=T
Date: REGEX(.*)



04. At t_3: Create entity E3 (notif)
====================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E3?type=T
Date: REGEX(.*)



05. At t_4: Create entity E4 (notif)
====================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E4?type=T
Date: REGEX(.*)



06. At t_5: Create entity E5 (not notif)
========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E5?type=T
Date: REGEX(.*)



07. Get accumulator dump (3 notifications): E2, E3, E4
======================================================
POST http://localhost:REGEX(\d+)/notify
Content-Length: 462
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8

{
  "subscriptionId" : "REGEX([0-9a-f]{24})",
  "originator" : "localhost",
  "contextResponses" : [
    {
      "contextElement" : {
        "type" : "T",
        "isPattern" : "false",
        "id" : "E2",
        "attributes" : [
          {
            "name" : "A",
            "type" : "none",
            "value" : "foo2"
          }
        ]
      },
      "statusCode" : {
        "code" : "200",
        "reasonPhrase" : "OK"
      }
    }
  ]
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Content-Length: 462
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8

{
  "subscriptionId" : "REGEX([0-9a-f]{24})",
  "originator" : "localhost",
  "contextResponses" : [
    {
      "contextElement" : {
        "type" : "T",
        "isPattern" : "false",
        "id" : "E3",
        "attributes" : [
          {
            "name" : "A",
            "type" : "none",
            "value" : "foo3"
          }
        ]
      },
      "statusCode" : {
        "code" : "200",
        "reasonPhrase" : "OK"
      }
    }
  ]
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Content-Length: 462
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8

{
  "subscriptionId" : "REGEX([0-9a-f]{24})",
  "originator" : "localhost",
  "contextResponses" : [
    {
      "contextElement" : {
        "type" : "T",
        "isPattern" : "false",
        "id" : "E4",
        "attributes" : [
          {
            "name" : "A",
            "type" : "none",
            "value" : "foo4"
          }
        ]
      },
      "statusCode" : {
        "code" : "200",
        "reasonPhrase" : "OK"
      }
    }
  ]
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop $LISTENER_PORT
dbDrop CB
