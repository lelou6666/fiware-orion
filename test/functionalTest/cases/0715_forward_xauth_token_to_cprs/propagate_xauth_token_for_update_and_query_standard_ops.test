# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Propagate Service-Path for Update and Query Requests

--SHELL-INIT--
dbInit CB

brokerStart CB 0
accumulatorStart

--SHELL--

#
# 01. Register E1/A1 in CB, accumulator as provApp
# 02. Update/UPDATE E1/A1 in CB with X-Auth token 'kz'
# 03. Query E1/A1 in CB with X-Auth token 'kz'
# 04. Update/UPDATE E1/A1 in CB without X-Auth token
# 05. Query E1/A1 in CB without X-Auth token
# 06. Dump accumulator to see X-Auth headers (or not)
#


echo "01. Register E1/A1 in CB, accumulator as provApp"
echo "================================================"
payload='{
  "contextRegistrations": [
  {
    "entities": [
      {
         "type": "T",
         "isPattern": "false",
         "id": "E1"
      }
    ],
    "attributes": [
      {
        "name": "A1",
        "type": "string",
        "isDomain": "false"
      }
    ],
    "providingApplication": "http://localhost:'${LISTENER_PORT}'/v1"
    }
 ],
 "duration": "P1M"
}'
orionCurl --url /v1/registry/registerContext --payload "${payload}" --json
echo
echo


echo "02. Update/UPDATE E1/A1 in CB with X-Auth token 'kz'"
echo "===================================================="
payload='{
  "contextElements": [
    {
      "type": "T",
      "id":   "E1",
      "attributes": [
        {
          "name": "A1",
          "type": "string",
          "value": "W1-CB"
        }
      ]
    }
  ],
  "updateAction": "UPDATE"
}'
orionCurl --url /v1/updateContext --payload "${payload}" --json --xauthToken kz
echo
echo


echo "03. Query E1/A1 in CB with X-Auth token 'kz'"
echo "============================================"
payload='{
  "entities": [
    {
      "type": "T",
      "isPattern": "false",
      "id": "E1"
    }
  ],
  "attributes" : [ "A1" ]
}'
orionCurl --url /v1/queryContext --payload "${payload}" --json --xauthToken kz
echo
echo


echo "04. Update/UPDATE E1/A1 in CB without X-Auth token"
echo "=================================================="
payload='{
  "contextElements": [
    {
      "type": "T",
      "id":   "E1",
      "attributes": [
        {
          "name": "A1",
          "type": "string",
          "value": "W1-CB"
        }
      ]
    }
  ],
  "updateAction": "UPDATE"
}'
orionCurl --url /v1/updateContext --payload "${payload}" --json
echo
echo


echo "05. Query E1/A1 in CB without X-Auth token"
echo "=========================================="
payload='{
  "entities": [
    {
      "type": "T",
      "isPattern": "false",
      "id": "E1"
    }
  ],
  "attributes" : [ "A1" ]
}'
orionCurl --url /v1/queryContext --payload "${payload}" --json
echo
echo


echo "06. Dump accumulator to see X-Auth headers (or not)"
echo "==================================================="
accumulatorDump
echo
echo


--REGEXPECT--
01. Register E1/A1 in CB, accumulator as provApp
================================================
HTTP/1.1 200 OK
Content-Length: 74
Content-Type: application/json
Date: REGEX(.*)

{
    "duration": "P1M", 
    "registrationId": "REGEX([0-9a-f]{24})"
}


02. Update/UPDATE E1/A1 in CB with X-Auth token 'kz'
====================================================
HTTP/1.1 200 OK
Content-Length: 147
Content-Type: application/json
Date: REGEX(.*)

{
    "errorCode": {
        "code": "404", 
        "details": "invalid context provider response", 
        "reasonPhrase": "No context element found"
    }
}


03. Query E1/A1 in CB with X-Auth token 'kz'
============================================
HTTP/1.1 200 OK
Content-Length: 147
Content-Type: application/json
Date: REGEX(.*)

{
    "errorCode": {
        "code": "404", 
        "details": "invalid context provider response", 
        "reasonPhrase": "No context element found"
    }
}


04. Update/UPDATE E1/A1 in CB without X-Auth token
==================================================
HTTP/1.1 200 OK
Content-Length: 147
Content-Type: application/json
Date: REGEX(.*)

{
    "errorCode": {
        "code": "404", 
        "details": "invalid context provider response", 
        "reasonPhrase": "No context element found"
    }
}


05. Query E1/A1 in CB without X-Auth token
==========================================
HTTP/1.1 200 OK
Content-Length: 147
Content-Type: application/json
Date: REGEX(.*)

{
    "errorCode": {
        "code": "404", 
        "details": "invalid context provider response", 
        "reasonPhrase": "No context element found"
    }
}


06. Dump accumulator to see X-Auth headers (or not)
===================================================
POST http://localhost:REGEX(\d+)/v1/updateContext
Content-Length: 274
X-Auth-Token: kz
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8

{
  "contextElements" : [
    {
      "type" : "T",
      "isPattern" : "false",
      "id" : "E1",
      "attributes" : [
        {
          "name" : "A1",
          "type" : "string",
          "value" : "W1-CB"
        }
      ]
    }
  ],
  "updateAction" : "UPDATE"
}
=======================================
POST http://localhost:REGEX(\d+)/v1/queryContext
Content-Length: 137
X-Auth-Token: kz
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8

{
  "entities" : [
    {
      "type" : "T",
      "isPattern" : "false",
      "id" : "E1"
    }
  ],
  "attributes" : [
    "A1"
  ]
}
=======================================
POST http://localhost:REGEX(\d+)/v1/updateContext
Content-Length: 274
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8

{
  "contextElements" : [
    {
      "type" : "T",
      "isPattern" : "false",
      "id" : "E1",
      "attributes" : [
        {
          "name" : "A1",
          "type" : "string",
          "value" : "W1-CB"
        }
      ]
    }
  ],
  "updateAction" : "UPDATE"
}
=======================================
POST http://localhost:REGEX(\d+)/v1/queryContext
Content-Length: 137
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8

{
  "entities" : [
    {
      "type" : "T",
      "isPattern" : "false",
      "id" : "E1"
    }
  ],
  "attributes" : [
    "A1"
  ]
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
