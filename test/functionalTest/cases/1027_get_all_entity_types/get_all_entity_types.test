# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
GET Entity Types

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. GET /v2/types and get an empty list
# 02. Create E1/T1/A1+A2
# 03. GET /v2/types and get a non-empty list
# 04. Create E2/T2/A1+A3
# 05. Create E3/T3/A2+A4
# 06. GET /v2/types and get a list of three types, each with one entity and two attributes
# 07. Create E4/T3/A4+A3
# 08. GET /v2/types and get a list of three types, T3 now has three attributes and two entities
#

echo "01. GET /v2/types and get an empty list"
echo "======================================="
orionCurl --url /v2/types --json
echo
echo


echo "02. Create E1/T1/A1+A2"
echo "======================"
payload='{
  "type": "T1",
  "id":   "E1",
  "A1": { "type": "String", "value": "s" },
  "A2": { "type": "Int", "value": 2 }
}'
orionCurl --url /v2/entities --payload "$payload" --json
echo
echo


echo "03. GET /v2/types and get a non-empty list"
echo "=========================================="
orionCurl --url /v2/types --json
echo
echo


echo "04. Create E2/T2/A1+A3"
echo "======================"
payload='{
  "type": "T2",
  "id":   "E2",
  "A1": { "type": "String", "value": "s" },
  "A3": { "type": "Bool", "value": true }
}'
orionCurl --url /v2/entities --payload "$payload" --json
echo
echo


echo "05. Create E3/T3/A2+A4"
echo "======================"
payload='{
  "type": "T3",
  "id":   "E3",
  "A2": { "type": "Int", "value": 2 },
  "A4": { "type": "String", "value": "a4" }
}'
orionCurl --url /v2/entities --payload "$payload" --json
echo
echo


echo "06. GET /v2/types and get a list of three types, each with one entity and two attributes"
echo "========================================================================================"
orionCurl --url /v2/types --json
echo
echo



echo "07. Create E4/T3/A4+A3"
echo "======================"
payload='{
  "type": "T3",
  "id":   "E4",
  "A4": { "type": "String", "value": "a4" },
  "A3": { "type": "Bool", "value": true }
}'
orionCurl --url /v2/entities --payload "$payload" --json
echo
echo


echo "08. GET /v2/types and get a list of three types, T3 now has three attributes and two entities"
echo "============================================================================================="
orionCurl --url /v2/types?options=count --json
echo
echo


--REGEXPECT--
01. GET /v2/types and get an empty list
=======================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Date: REGEX(.*)

{}


02. Create E1/T1/A1+A2
======================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T1
Date: REGEX(.*)



03. GET /v2/types and get a non-empty list
==========================================
HTTP/1.1 200 OK
Content-Length: 71
Content-Type: application/json
Date: REGEX(.*)

{
    "T1": {
        "attrs": {
            "A1": {
                "type": "String"
            },
            "A2": {
                "type": "Int"
            }
        },
        "count": 1
    }
}


04. Create E2/T2/A1+A3
======================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E2?type=T2
Date: REGEX(.*)



05. Create E3/T3/A2+A4
======================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E3?type=T3
Date: REGEX(.*)



06. GET /v2/types and get a list of three types, each with one entity and two attributes
========================================================================================
HTTP/1.1 200 OK
Content-Length: 212
Content-Type: application/json
Date: REGEX(.*)

{
    "T1": {
        "attrs": {
            "A1": {
                "type": "String"
            },
            "A2": {
                "type": "Int"
            }
        },
        "count": 1
    },
    "T2": {
        "attrs": {
            "A1": {
                "type": "String"
            },
            "A3": {
                "type": "Bool"
            }
        },
        "count": 1
    },
    "T3": {
        "attrs": {
            "A2": {
                "type": "Int"
            },
            "A4": {
                "type": "String"
            }
        },
        "count": 1
    }
}


07. Create E4/T3/A4+A3
======================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E4?type=T3
Date: REGEX(.*)



08. GET /v2/types and get a list of three types, T3 now has three attributes and two entities
=============================================================================================
HTTP/1.1 200 OK
Content-Length: 233
Content-Type: application/json
X-Total-Count: 4
Date: REGEX(.*)

{
    "T1": {
        "attrs": {
            "A1": {
                "type": "String"
            },
            "A2": {
                "type": "Int"
            }
        },
        "count": 1
    },
    "T2": {
        "attrs": {
            "A1": {
                "type": "String"
            },
            "A3": {
                "type": "Bool"
            }
        },
        "count": 1
    },
    "T3": {
        "attrs": {
            "A2": {
                "type": "Int"
            },
            "A3": {
                "type": "Bool"
            },
            "A4": {
                "type": "String"
            }
        },
        "count": 2
    }
}


--TEARDOWN--
brokerStop CB
dbDrop CB
