# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Bad Input On Notification Error (with relogged alarms)

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255 IPv4 -subCacheIval 5 -relogAlarms
accumulatorStart 0.0.0.0 ${LISTENER_PORT}

--SHELL--

#
# 01. Try to create subscription for E1/A1, but with 'reference' x.y.com:abc - see error
# 02. Try to create subscription for E1/A1, but with 'reference' without IP, just a port - see error
# 03. Try to create subscription for E1/A1, but with 'reference' http://http://abc.a.com:1234 - see error
# 04. Check log-file to make sure the Bad Input alarm is active
# 05. Create a valid subscription for E1/A1
# 06. Check log-file to make sure the Bad Input alarm is reset
# 07. Corrupt reference in subscription (using mongo)
# 08. Wait six seconds to assure the subscription cache has been modified
# 09. Update E1/A1 to provoke a notification for the invalid subscription
# 10. Check log-file to make sure a Runtime Error was provoked due to the invalid subscription
#

echo "01. Try to create subscription for E1/A1, but with 'reference' x.y.com:abc - see error"
echo "======================================================================================"
payload='{
  "subject": {
    "entities": [
      {
        "id": "E1"
      }
    ],
    "condition": {
      "attributes": [ "A1" ]
    }
  },
  "notification": {
    "callback": "x.y.com:abc",
    "attributes": ["A1"],
    "throttling": 5
  },
  "expires": "2026-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "$payload" --json
echo
echo


echo "02. Try to create subscription for E1/A1, but with 'reference' without IP, just a port - see error"
echo "=================================================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id": "E1"
      }
    ],
    "condition": {
      "attributes": [ "A1" ]
    }
  },
  "notification": {
    "callback": "1234",
    "attributes": ["A1"],
    "throttling": 5
  },
  "expires": "2026-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "$payload" --json
echo
echo


echo "03. Try to create subscription for E1/A1, but with 'reference' http://http://abc.a.com:1234 - see error"
echo "======================================================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "id": "E1"
      }
    ],
    "condition": {
      "attributes": [ "A1" ]
    }
  },
  "notification": {
    "callback": "http://http://abc.a.com:1234",
    "attributes": ["A1"],
    "throttling": 5
  },
  "expires": "2026-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "$payload" --json
echo
echo


echo "04. Check log-file to make sure the Bad Input alarm is active"
echo "============================================================="
grep "BadInput" /tmp/contextBroker.log | cut -d\| -f 9- | cut -d: -f 2-
echo
echo


echo "05. Create a valid subscription for E1/A1"
echo "========================================="
payload='{
  "subject": {
    "entities": [
      {
        "id": "E1"
      }
    ],
    "condition": {
      "attributes": [ "A1" ]
    }
  },
  "notification": {
    "callback": "http://127.0.0.1:'${LISTENER_PORT}'/notify",
    "attributes": ["A1"],
    "throttling": 5
  },
  "expires": "2026-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions --payload "$payload" --json
SUB_ID=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")
echo
echo


echo "06. Check log-file to make sure the Bad Input alarm is reset"
echo "============================================================"
grep "BadInput" /tmp/contextBroker.log | cut -d\| -f 9- | cut -d: -f 2-
echo
echo


echo "07. Corrupt reference in subscription (using mongo)"
echo "==================================================="
echo 'db.csubs.update({_id: ObjectId("'$SUB_ID'")}, { $set: { "reference": "badReferenceForSubscription" }})' | mongo $CB_DB_NAME --quiet
echo
echo


echo "08. Wait six seconds to assure the subscription cache has been modified"
echo "======================================================================="
sleep 6
echo
echo


echo "09. Update E1/A1 to provoke a notification for the invalid subscription"
echo "======================================================================="
payload='{
  "A1": 12,
  "id": "E1",
  "type": "T1"
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload" --json
echo
echo


echo "10. Check log-file to make sure a Runtime Error was provoked due to the invalid subscription"
echo "============================================================================================"
grep "malformed URL" /tmp/contextBroker.log | cut -d\| -f 9- | cut -d: -f 2-
echo
echo


--REGEXPECT--
01. Try to create subscription for E1/A1, but with 'reference' x.y.com:abc - see error
======================================================================================
HTTP/1.1 400 Bad Request
Content-Length: 50
Content-Type: application/json
Date: REGEX(.*)

{
    "description": "Invalid URL",
    "error": "BadRequest"
}


02. Try to create subscription for E1/A1, but with 'reference' without IP, just a port - see error
==================================================================================================
HTTP/1.1 400 Bad Request
Content-Length: 50
Content-Type: application/json
Date: REGEX(.*)

{
    "description": "Invalid URL",
    "error": "BadRequest"
}


03. Try to create subscription for E1/A1, but with 'reference' http://http://abc.a.com:1234 - see error
=======================================================================================================
HTTP/1.1 400 Bad Request
Content-Length: 50
Content-Type: application/json
Date: REGEX(.*)

{
    "description": "Invalid URL",
    "error": "BadRequest"
}


04. Check log-file to make sure the Bad Input alarm is active
=============================================================
 Raising alarm BadInput 0.0.0.0: Invalid URL
 Repeated BadInput 0.0.0.0: Invalid URL
 Repeated BadInput 0.0.0.0: Invalid URL


05. Create a valid subscription for E1/A1
=========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Date: REGEX(.*)



06. Check log-file to make sure the Bad Input alarm is reset
============================================================
 Raising alarm BadInput 0.0.0.0: Invalid URL
 Repeated BadInput 0.0.0.0: Invalid URL
 Repeated BadInput 0.0.0.0: Invalid URL
 Releasing alarm BadInput 0.0.0.0


07. Corrupt reference in subscription (using mongo)
===================================================
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })


08. Wait six seconds to assure the subscription cache has been modified
=======================================================================


09. Update E1/A1 to provoke a notification for the invalid subscription
=======================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T1
Date: REGEX(.*)



10. Check log-file to make sure a Runtime Error was provoked due to the invalid subscription
============================================================================================
 Runtime Error (not sending NotifyContextRequest: malformed URL: 'badReferenceForSubscription')


--TEARDOWN--
brokerStop CB
accumulatorStop $LISTENER_PORT
dbDrop CB
