# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
POST Subscriptions V2 q expression (not equal enum number)

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart

--SHELL--

#
# 01. Create subscription with q: avg!=23,47
# 02. Create entity with avg=23 (not notif)
# 03. Update entity to avg=35 (notif)
# 04. Update entity to avg=47 (not notif)
# 05. Update entity to avg=93 (notif)
# 06. Dump accumulator (2 notifications)
#

echo "01. Create subscription with q: avg!=23,47"
echo "=========================================="
payload='
{
    "subject": {
        "entities": [
            {
                "id": "E1",
                "type": "T"
            }
        ],
        "condition": {
            "attributes": [ ],
            "expression": {
               "q": "avg!=23,47"
            }
         }
    },
    "notification": {
        "callback": "http://localhost:'$LISTENER_PORT'/notify",
        "attributes": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}
'
orionCurl --url /v2/subscriptions --payload "$payload" --json
echo
echo


echo "02. Create entity with avg=23 (not notif)"
echo "========================================="
payload='{
  "id": "E1",
  "type": "T",
  "avg": 23
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload" --json
echo
echo


echo "03. Update entity to avg=35 (notif)"
echo "==================================="
payload='{
  "avg": 35
}'
orionCurl --url '/v2/entities/E1?options=keyValues' --payload "$payload" --json -X PATCH
echo
echo


echo "04. Update entity to avg=47 (not notif)"
echo "======================================="
payload='{
  "avg": 47
}'
orionCurl --url '/v2/entities/E1?options=keyValues' --payload "$payload" --json -X PATCH
echo
echo


echo "05. Update entity to avg=93 (notif)"
echo "==================================="
payload='{
  "avg": 93
}'
orionCurl --url '/v2/entities/E1?options=keyValues' --payload "$payload" --json -X PATCH
echo
echo


echo "06. Get accumulator dump (2 notifications)"
echo "=========================================="
accumulatorDump
echo
echo


--REGEXPECT--
01. Create subscription with q: avg!=23,47
==========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Date: REGEX(.*)



02. Create entity with avg=23 (not notif)
=========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T
Date: REGEX(.*)



03. Update entity to avg=35 (notif)
===================================
HTTP/1.1 204 No Content
Content-Length: 0
Date: REGEX(.*)



04. Update entity to avg=47 (not notif)
=======================================
HTTP/1.1 204 No Content
Content-Length: 0
Date: REGEX(.*)



05. Update entity to avg=93 (notif)
===================================
HTTP/1.1 204 No Content
Content-Length: 0
Date: REGEX(.*)



06. Get accumulator dump (2 notifications)
==========================================
POST http://localhost:REGEX(\d+)/notify
Content-Length: 460
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8

{
  "subscriptionId" : "REGEX([0-9a-f]{24})",
  "originator" : "localhost",
  "contextResponses" : [
    {
      "contextElement" : {
        "type" : "T",
        "isPattern" : "false",
        "id" : "E1",
        "attributes" : [
          {
            "name" : "avg",
            "type" : "none",
            "value" : 35
          }
        ]
      },
      "statusCode" : {
        "code" : "200",
        "reasonPhrase" : "OK"
      }
    }
  ]
}
=======================================
POST http://localhost:REGEX(\d+)/notify
Content-Length: 460
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8

{
  "subscriptionId" : "REGEX([0-9a-f]{24})",
  "originator" : "localhost",
  "contextResponses" : [
    {
      "contextElement" : {
        "type" : "T",
        "isPattern" : "false",
        "id" : "E1",
        "attributes" : [
          {
            "name" : "avg",
            "type" : "none",
            "value" : 93
          }
        ]
      },
      "statusCode" : {
        "code" : "200",
        "reasonPhrase" : "OK"
      }
    }
  ]
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop $LISTENER_PORT
dbDrop CB
