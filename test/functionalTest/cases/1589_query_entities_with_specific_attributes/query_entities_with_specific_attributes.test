# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
V2 query with q=+attrName

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# This test is DISABLED as the current MHD version has a bug that converts '+' in the URL into SPACE.
# The issue #1675 is to fix this and this test is to be enabled (and completed) when 1675 is fixed.
#
#
# 01. Create an entity E1 with attribute A1
# 02. Create an entity E2 with attribute A1
# 03. Create an entity E3 with attribute A3
# 04. GET all entities (3 entities)
# 05. GET entities with attribute A1 (2 entities)
# 06. GET entities with attribute A2 (ZERO entities)
# 07. GET entities with attribute A3 (1 entity)
# 08. GET entities without attribute A3 (2 entities)
#


echo "01. Create an entity E1 with attribute A1"
echo "========================================="
payload='{
    "id": "E1",
    "A1": { "value": 1 }
}'
orionCurl --url /v2/entities --payload "$payload" --json
echo
echo


echo "02. Create an entity E2 with attribute A1"
echo "========================================="
payload='{
    "id": "E2",
    "A1": { "value": 2 }
}'
orionCurl --url /v2/entities --payload "$payload" --json
echo
echo


echo "03. Create an entity E3 with attribute A3"
echo "========================================="
payload='{
    "id": "E3",
    "A3": { "value": 3 }
}'
orionCurl --url /v2/entities --payload "$payload" --json
echo
echo


echo "04. GET all entities (3 entities)"
echo "================================="
orionCurl --url /v2/entities --json
echo
echo


echo "05. GET entities with attribute A1 (2 entities)"
echo "==============================================="
orionCurl --url '/v2/entities?q=A1' --json
echo
echo


echo "06. GET entities with attribute A2 (ZERO entities)"
echo "=================================================="
orionCurl --url '/v2/entities?q=A2' --json
echo
echo


echo "07. GET entities with attribute A3 (1 entity)"
echo "============================================="
orionCurl --url '/v2/entities?q=A3' --json
echo
echo


echo "08. GET entities without attribute A3 (2 entities)"
echo "=================================================="
orionCurl --url '/v2/entities?q=!A3' --json
echo
echo


--REGEXPECT--
01. Create an entity E1 with attribute A1
=========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=none
Date: REGEX(.*)



02. Create an entity E2 with attribute A1
=========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E2?type=none
Date: REGEX(.*)



03. Create an entity E3 with attribute A3
=========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E3?type=none
Date: REGEX(.*)



04. GET all entities (3 entities)
=================================
HTTP/1.1 200 OK
Content-Length: 214
Content-Type: application/json
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {},
            "type": "none",
            "value": 1
        },
        "id": "E1",
        "type": "none"
    },
    {
        "A1": {
            "metadata": {},
            "type": "none",
            "value": 2
        },
        "id": "E2",
        "type": "none"
    },
    {
        "A3": {
            "metadata": {},
            "type": "none",
            "value": 3
        },
        "id": "E3",
        "type": "none"
    }
]


05. GET entities with attribute A1 (2 entities)
===============================================
HTTP/1.1 200 OK
Content-Length: 143
Content-Type: application/json
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {},
            "type": "none",
            "value": 1
        },
        "id": "E1",
        "type": "none"
    },
    {
        "A1": {
            "metadata": {},
            "type": "none",
            "value": 2
        },
        "id": "E2",
        "type": "none"
    }
]


06. GET entities with attribute A2 (ZERO entities)
==================================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Date: REGEX(.*)

[]


07. GET entities with attribute A3 (1 entity)
=============================================
HTTP/1.1 200 OK
Content-Length: 72
Content-Type: application/json
Date: REGEX(.*)

[
    {
        "A3": {
            "metadata": {},
            "type": "none",
            "value": 3
        },
        "id": "E3",
        "type": "none"
    }
]


08. GET entities without attribute A3 (2 entities)
==================================================
HTTP/1.1 200 OK
Content-Length: 143
Content-Type: application/json
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {},
            "type": "none",
            "value": 1
        },
        "id": "E1",
        "type": "none"
    },
    {
        "A1": {
            "metadata": {},
            "type": "none",
            "value": 2
        },
        "id": "E2",
        "type": "none"
    }
]


--TEARDOWN--
brokerStop CB
dbDrop CB
