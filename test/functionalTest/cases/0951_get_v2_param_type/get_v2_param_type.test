# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
GET Entitity Attribute V2

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#

#

echo "01. POST /v2/entities/E1 T1"
echo "==========================="
payload='{
    "id": "E1",
    "type": "T1",
    "A1":{
         "value": "V1 A1 E1/T1"
    },
    "A2":{
         "value": "V1 A2 E1/T1"
    }
}'
orionCurl --url /v2/entities --payload "$payload" --json
echo
echo


echo "02. POST /v2/entities/E1 T2"
echo "==========================="
payload='{
    "id": "E1",
    "type": "T2",
    "A1":{
         "value": "V1 A1 E1/T2"
    },
    "A2":{
         "value": "V1 A2 E1/T2"
    }
}'
orionCurl --url /v2/entities --payload "$payload" --json
echo
echo


echo "03. GET /v2/entities/E1?type=T1"
echo "==============================="
orionCurl --url "/v2/entities/E1?type=T1" --json
echo
echo


echo "04. GET /v2/entities/E1?type=T1&attrs=A1"
echo "========================================"
orionCurl --url "/v2/entities/E1?type=T1&attrs=A1" --json
echo
echo


echo "05. GET /v2/entities/E1/attrs/A2?type=T2"
echo "========================================"
orionCurl --url "/v2/entities/E1/attrs/A2?type=T2" --json
echo
echo

echo "06. GET /v2/entities/E1/attrs/A1/value?type=T1"
echo "=============================================="
orionCurl --url "/v2/entities/E1/attrs/A1/value?type=T1" --out text
echo
echo


--REGEXPECT--
01. POST /v2/entities/E1 T1
===========================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T1
Date: REGEX(.*)



02. POST /v2/entities/E1 T2
===========================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T2
Date: REGEX(.*)



03. GET /v2/entities/E1?type=T1
===============================
HTTP/1.1 200 OK
Content-Length: 137
Content-Type: application/json
Date: REGEX(.*)

{
    "A1": {
        "metadata": {},
        "type": "none",
        "value": "V1 A1 E1/T1"
    },
    "A2": {
        "metadata": {},
        "type": "none",
        "value": "V1 A2 E1/T1"
    },
    "id": "E1",
    "type": "T1"
}


04. GET /v2/entities/E1?type=T1&attrs=A1
========================================
HTTP/1.1 200 OK
Content-Length: 80
Content-Type: application/json
Date: REGEX(.*)

{
    "A1": {
        "metadata": {},
        "type": "none",
        "value": "V1 A1 E1/T1"
    },
    "id": "E1",
    "type": "T1"
}


05. GET /v2/entities/E1/attrs/A2?type=T2
========================================
HTTP/1.1 200 OK
Content-Length: 51
Content-Type: application/json
Date: REGEX(.*)

{
    "metadata": {},
    "type": "none",
    "value": "V1 A2 E1/T2"
}


06. GET /v2/entities/E1/attrs/A1/value?type=T1
==============================================
HTTP/1.1 200 OK
Content-Length: 11
Content-Type: text/plain
Date: REGEX(.*)

V1 A1 E1/T1


--TEARDOWN--
brokerStop CB
dbDrop CB

