# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
V2 batch query

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create an entity E of type T, with attributes A1=11,A4=14,A5=15
# 02. Create an entity E of type T2, with attributes A2=22,A5=25
# 03. Create an entity E3 of type T, with attributes A3=33,A4=34,A5=35
#
# 04. POST /v2/op/query, with E.* and in a scope q:A1==11, see E/T
# 05. Create an entity E5 without type, with attribute A5=45
# 06. Create an entity E5 of type T4, with attribute A5=45 and attribute B
# 07. POST /v2/op/query, with E.*, and with scopes q:B and q=A5==45, see E5/T4 and E5/none
# 08. POST /v2/op/query, with E.* with scopes q:!B and q=A5==45, see NO entities
#


echo "01. Create an entity E of type T, with attributes A1=11,A4=14,A5=15"
echo "==================================================================="
payload='{
  "id": "E",
  "type": "T",
  "A1": 11,
  "A4": 14,
  "A5": 15
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload" --json
echo
echo


echo "02. Create an entity E of type T2, with attributes A2=22,A5=25"
echo "=============================================================="
payload='{
  "id": "E",
  "type": "T2",
  "A2": 22,
  "A5": 25
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload" --json
echo
echo


echo "03. Create an entity E3 of type T, with attributes A3=33,A4=34,A5=35"
echo "===================================================================="
payload='{
  "id": "E3",
  "type": "T",
  "A3": 33,
  "A4": 34,
  "A5": 35
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload" --json
echo
echo


echo "04. POST /v2/op/query, with E.* and in a scope q:A1==11, see E/T"
echo "================================================================"
payload='{
  "scopes": [
    {
      "type": "FIWARE::StringQuery",
      "value": "A1==11"
    }
  ]
}'
orionCurl --url /v2/op/query --payload "$payload" --json
echo
echo


echo "05. Create an entity E5 without type, with attribute A5=45"
echo "=========================================================="
payload='{
  "id": "E5",
  "A5": 45
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload" --json
echo
echo


echo "06. Create an entity E5 of type T4, with attribute A5=45 and attribute B"
echo "========================================================================"
payload='{
  "id": "E5",
  "type": "T4",
  "A5": 45,
  "B": "just a mark"
}'
orionCurl --url /v2/entities?options=keyValues --payload "$payload" --json
echo
echo


echo "07. POST /v2/op/query, with E.*, and with scopes q:B and q=A5==45, see E5/T4"
echo "============================================================================"
payload='{
  "entities": [
    {
      "idPattern": "E.*"
    }
  ],
  "scopes": [
    {
      "type": "FIWARE::StringQuery",
      "value": "B"
    },
    {
      "type": "FIWARE::StringQuery",
      "value": "A5==45"
    }
  ]
}'
orionCurl --url /v2/op/query --payload "$payload" --json
echo
echo


echo "08. POST /v2/op/query, with E.* with scopes q:!type and q=A5==45, see E5/none"
echo "============================================================================="
payload='{
  "entities": [
    {
      "idPattern": "E.*"
    }
  ],
  "scopes": [
    {
      "type": "FIWARE::StringQuery",
      "value": "!B"
    },
    {
      "type": "FIWARE::StringQuery",
      "value": "A5==45"
    }
  ]
}'
orionCurl --url /v2/op/query --payload "$payload" --json
echo
echo



--REGEXPECT--
01. Create an entity E of type T, with attributes A1=11,A4=14,A5=15
===================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E?type=T
Date: REGEX(.*)



02. Create an entity E of type T2, with attributes A2=22,A5=25
==============================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E?type=T2
Date: REGEX(.*)



03. Create an entity E3 of type T, with attributes A3=33,A4=34,A5=35
====================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E3?type=T
Date: REGEX(.*)



04. POST /v2/op/query, with E.* and in a scope q:A1==11, see E/T
================================================================
HTTP/1.1 200 OK
Content-Length: 161
Content-Type: application/json
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {},
            "type": "none",
            "value": 11
        },
        "A4": {
            "metadata": {},
            "type": "none",
            "value": 14
        },
        "A5": {
            "metadata": {},
            "type": "none",
            "value": 15
        },
        "id": "E",
        "type": "T"
    }
]


05. Create an entity E5 without type, with attribute A5=45
==========================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E5?type=none
Date: REGEX(.*)



06. Create an entity E5 of type T4, with attribute A5=45 and attribute B
========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E5?type=T4
Date: REGEX(.*)



07. POST /v2/op/query, with E.*, and with scopes q:B and q=A5==45, see E5/T4
============================================================================
HTTP/1.1 200 OK
Content-Length: 127
Content-Type: application/json
Date: REGEX(.*)

[
    {
        "A5": {
            "metadata": {},
            "type": "none",
            "value": 45
        },
        "B": {
            "metadata": {},
            "type": "none",
            "value": "just a mark"
        },
        "id": "E5",
        "type": "T4"
    }
]


08. POST /v2/op/query, with E.* with scopes q:!type and q=A5==45, see E5/none
=============================================================================
HTTP/1.1 200 OK
Content-Length: 73
Content-Type: application/json
Date: REGEX(.*)

[
    {
        "A5": {
            "metadata": {},
            "type": "none",
            "value": 45
        },
        "id": "E5",
        "type": "none"
    }
]


--TEARDOWN--
brokerStop CB
dbDrop CB
